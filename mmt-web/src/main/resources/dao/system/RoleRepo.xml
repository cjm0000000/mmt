<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.cjm0000000.mmt.web.system.persistence.RoleRepository">
	<select id="getRoleList" parameterType="int" resultType="com.github.cjm0000000.mmt.web.system.bean.Role">
		SELECT A.role_id,A.role_name,A.`status`,A.role_desc,A.sort,A.reloadable
			FROM system_role A 
		WHERE A.`status`='AVAILABLE' 
		ORDER BY A.sort
		<if test="limit > 0">
			 LIMIT #{start},#{limit}
		</if>
	</select>
	<select id="getRsCnt" resultType="int">
		SELECT count(1) cnt 
			FROM system_role A 
		WHERE A.`status`='AVAILABLE'
	</select>
	<insert id="addRole" parameterType="com.github.cjm0000000.mmt.web.system.bean.Role" useGeneratedKeys="true" keyProperty="role_id">
		INSERT INTO system_role(role_name,role_desc,status,sort,reloadable) 
			VALUES(#{role_name},#{role_desc},#{status},#{sort},#{reloadable})
	</insert>
	<update id="update" parameterType="com.github.cjm0000000.mmt.web.system.bean.Role">
		UPDATE system_role A 
			SET A.role_name=#{role_name}, 
				A.role_desc=#{role_desc}, 
				<if test="status != null">
				A.`status`=#{status},
				</if>
				<if test="reloadable != null">
				A.reloadable=#{reloadable},
				</if>
				A.sort=#{sort}
			WHERE A.role_id=#{role_id}
	</update>
	<update id="batchDelete" parameterType="int">
		UPDATE system_role A
			SET A.`status`='UNAVAILABLE'
		WHERE A.role_id IN 
		<foreach collection="array" item="role_ids" index="index" open="(" separator="," close=")">
			#{role_ids}
		</foreach>
	</update>
	<select id="getRole" parameterType="int" resultType="com.github.cjm0000000.mmt.web.system.bean.Role">
		SELECT A.role_id,A.role_name,A.`status`,A.role_desc,A.sort,A.reloadable
			FROM system_role A WHERE A.role_id=#{role_id}
	</select>
	<select id="checkRoleName" parameterType="string" resultType="int">
		SELECT count(1) cnt
			FROM system_role A 
		WHERE A.role_name=#{role_name} 
			AND A.`status`='AVAILABLE'
	</select>
	<delete id="deleteRoleAuthority" parameterType="int">
		DELETE FROM system_role_menu WHERE role_id=#{role_id}
	</delete>
	<insert id="setDefaultRoleAuthority" parameterType="int">
		INSERT INTO system_role_menu(role_id,menu_id) 
			SELECT A.role_id,A.menu_id
		FROM system_role_menu_default A
			WHERE A.role_id=#{role_id}
	</insert>
	<insert id="setRoleAuthority">
		INSERT INTO system_role_menu(role_id,menu_id) 
			SELECT #{role_id},menu_id
				FROM system_menu A 
			WHERE A.menu_id IN 
		<foreach collection="list" item="list" index="index" open="(" separator="," close=")">
			#{list}
		</foreach>
	</insert>
	<select id="getAuthority" parameterType="int" resultType="com.github.cjm0000000.mmt.web.system.bean.Menu">
		SELECT A.menu_id,A.menu_name,A.menulevcod,A.supmenucode,A.menuico,B.menu_id  authority
        	FROM system_menu A        
        		LEFT JOIN system_role_menu B on A.menu_id = B.menu_id AND B.role_id=#{role_id}
			WHERE A.menu_id != 0
		ORDER BY A.menulevcod,A.sort
	</select>
	<update id="updateReload" parameterType="int">
		UPDATE system_role A 
			SET a.reloadable='UNAVAILABLE' 
		WHERE A.role_id=#{role_id}
	</update>
	<update id="setReloadFlag" parameterType="int">
		UPDATE system_role A
			SET A.reloadable='AVAILABLE'
		WHERE EXISTS(
			SELECT 1 FROM system_role_menu B 
				WHERE A.role_id=B.role_id 
					AND b.menu_id=#{menu_id})
	</update>
	<select id="getRoleListByAuthority" parameterType="int" resultType="com.github.cjm0000000.mmt.web.system.bean.Role">
		SELECT A.role_id,A.role_name,A.`status`,A.role_desc,A.sort,A.reloadable
			FROM system_role A, system_role_menu B
		WHERE A.role_id=B.role_id
          AND B.menu_id=#{authority}
          AND A.`status`='AVAILABLE' 
		ORDER BY A.sort
	</select>
</mapper>